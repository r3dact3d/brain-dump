{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/Journals/daily-note-2025-01-02",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"daily-note\",\n  \"foam_template\": {\n    \"NAME\": \"Daily Journal\",\n    \"description\": \"Journal for 2025-01-02\"\n  }\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"2025-01-02 Journal\"), mdx(\"h2\", null, \"Morning Routine\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Mood\"), \": Happy, but Tired\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Gratitude\"), \": \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I am grateful to be able to see the sunrise!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I am also grateful for my nice sturdy furniture.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Goals\"), \": I hope to get setup with a good way to document my stuff!\")), mdx(\"h2\", null, \"Tasks\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  }), \" \", \"Pick a note taker and second brain\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  }), \" \", \"Get MVP of second brain via Foam\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  }), \" \", \"Draw a plan for next step\")), mdx(\"h2\", null, \"Meetings\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"No Meetings\"))), mdx(\"h2\", null, \"Ideas & Inspiration\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/Calendar-Integration\",\n    \"title\": \"Calendar Integration\"\n  }, \"[[Calendar Integration]]\"), \"\"), \": Workflow to scrape or sync calendar items to daily journal.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/AI-chatbot\",\n    \"title\": \"AI chatbot\"\n  }, \"[[AI chatbot]]\"), \"\"), \": Look for ways to leverage AI on second brain data, currently storing in GitHub and locally\")), mdx(\"h2\", null, \"Project Updates\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/FOAM-UP\",\n    \"title\": \"FOAM-UP\"\n  }, \"[[FOAM-UP]]\"), \"\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Status\"), \": \", \"[In Progress]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Notes\"), \": What you see is what you get\")))), mdx(\"h2\", null, \"Evening Reflection\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Accomplishments\"), \": Developed a good idea and picture of personal knowledge managment and idea/note tracking for the new year!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Challenges\"), \": Minor challenges with focus.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Learnings\"), \": I learned how to create faster notes and links between them.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Plans\"), \": I plan on enhancing the content and ideas I have so far and looking into the next week going back to work.\")), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tags\"), \": #daily \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#2025-01-02-journal","title":"2025-01-02 Journal","items":[{"url":"#morning-routine","title":"Morning Routine"},{"url":"#tasks","title":"Tasks"},{"url":"#meetings","title":"Meetings"},{"url":"#ideas--inspiration","title":"Ideas & Inspiration"},{"url":"#project-updates","title":"Project Updates"},{"url":"#evening-reflection","title":"Evening Reflection"}]}]},"outboundReferences":[{"contextLine":"- **[[AI chatbot]]**: Look for ways to leverage AI on second brain data, currently storing in GitHub and locally","targetAnchor":null,"refWord":"AI chatbot","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"basic-note\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"AI chatbot\"), mdx(\"h2\", null, \"Todo List\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"First tabstop\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A second tabstop\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A third tabstop\")), mdx(\"p\", null, \"Note Created: 2025-01-02\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"d10775fb-f3b3-535b-a099-335dcaa6c5f3","fields":{"slug":"/Ideas/AI chatbot","title":"AI chatbot"}}}},{"contextLine":"- **[[FOAM-UP]]**:","targetAnchor":null,"refWord":"FOAM-UP","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"basic-note\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"FOAM-UP\"), mdx(\"p\", null, \"The short story with Foam is I can use \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Markdown\"), \" with \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Code\"), \" and leverage \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"GitHub\"), \" to manage my personal knowledge.\"), mdx(\"h2\", null, \"What I've done\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Got it setup in Code with a couple extensions\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Wrapped my head around the layout and structure and backlinks \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Established a couple of templates for daily and default notes\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Configured \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Automatic%20Updates\",\n    \"title\": \"Automatic Updates\"\n  }, \"[[Automatic Updates]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  })), mdx(\"h2\", null, \"Todo\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Import more notes and historical data\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Integrations\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Calendar\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Chatbot\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Email\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Iterate\")), mdx(\"p\", null, \"Note Created: 2025-01-06\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"8619f8bc-1db4-5c7e-80fd-59c8f73da26c","fields":{"slug":"/FOAM-UP","title":"FOAM-UP"}}}}],"inboundReferences":[]},"fields":{"slug":"/Journals/daily-note-2025-01-02","title":"2025-01-02 Journal"}}},"pageContext":{"id":"b2ff99cc-d334-57bc-b992-24bef599c517","refWordMdxSlugDict":{"AI chatbot":"Ideas/AI-chatbot","FOAM-UP":"FOAM-UP","Automatic Updates":"Automatic-Updates"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}