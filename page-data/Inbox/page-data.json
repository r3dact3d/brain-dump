{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/Inbox",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"feature\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Inbox\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Process to onboard using CaC\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ensure new org is created\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"template dir structure for org group_var\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"project - \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"template - get_stats\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Write a system prompt for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"private/myBot\",\n    \"title\": \"myBot\"\n  }, \"[[myBot]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"uhm \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/quantization\",\n    \"title\": \"quantization\"\n  }, \"[[quantization]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"how to get calendar info into Foam\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"how to get email info into Foam\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"process to attach docs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/3930-North-Texas-Emergency\",\n    \"title\": \"3930 North Texas Emergency\"\n  }, \"[[3930 North Texas Emergency]]\"), \" Sunday morning checkin reminder\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"automate \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Check-in-Report\",\n    \"title\": \"Check-in Report\"\n  }, \"[[Check-in Report]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Prayer-List\",\n    \"title\": \"Prayer List\"\n  }, \"[[Prayer List]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://foambubble.github.io/foam/user/recipes/diagrams-in-markdown\"\n  }, \"Diagrams\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Ideas/Ultimate%20AI%20Prompt\",\n    \"title\": \"Ultimate AI Prompt\"\n  }, \"[[Ultimate AI Prompt]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Ideas/Observation%20Report\",\n    \"title\": \"Observation Report\"\n  }, \"[[Observation Report]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/context\",\n    \"title\": \"context\"\n  }, \"[[context]]\"), \" file\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/RSS-Feeds\",\n    \"title\": \"RSS Feeds\"\n  }, \"[[RSS Feeds]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Hugging-Face\",\n    \"title\": \"Hugging Face\"\n  }, \"[[Hugging Face]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Ideas/ChatGPT%20Prompt%20Engineering\",\n    \"title\": \"ChatGPT Prompt Engineering\"\n  }, \"[[ChatGPT Prompt Engineering]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Export \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"private/Quarterly%20Connection\",\n    \"title\": \"Quarterly Connection\"\n  }, \"[[Quarterly Connection]]\"), \" to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Second-Brain\",\n    \"title\": \"Second Brain\"\n  }, \"[[Second Brain]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upload personality traits and compare annually \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/casi\",\n    \"title\": \"casi\"\n  }, \"[[casi]]\"), \"\"))), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"readme\",\n    \"title\": \"readme\"\n  }, \"[[readme]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#inbox","title":"Inbox"}]},"outboundReferences":[{"contextLine":"- [[Ultimate AI Prompt]]","targetAnchor":null,"refWord":"Ultimate AI Prompt","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"idea-note\",\n  \"description\": \"This is my idea note template\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Ultimate AI Prompt\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-markdown\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-markdown\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token title important\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"#\"), \" Identity\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token title important\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"#\"), \" Goals\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token title important\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"#\"), \" Steps\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"1.\"), \" Determine the observation location based on details from INPUT and use as geographical location for the remainder of the steps if required.\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"2.\"), \" Take notes of any other useful information provide in the INPUT like camera details, other location information, and other curious things that are interesting to an astronomer, astrophotographer, or even an astrophysicist.\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"3.\"), \" Consult the latest Old Farmer's Alamanac and deeply consider all the implied context.\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"4.\"), \" Check Weather and Sky Conditions to ensure the sky is clear for optimal viewing. Consider several locations with minimal light pollution for better visibility.  Also, assess atmospheric stability for clearer images.\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"5.\"), \" Identify potential targets from INPUT or expert experience and research. \\nCelestial Objects:\\nStars: Bright stars, variable stars, binary stars.\\nPlanets: Visible planets and their moons.\\nDeep Sky Objects: Galaxies, nebulae, star clusters.\\nTransient Events:\\nComets: Periodic and non-periodic comets.\\nMeteor Showers: Peak times for meteor showers.\\nEclipses: Solar and lunar eclipses.\\nSupernovae: Recent supernova events.\\nSpecial Events:\\nConjunctions: Close approaches of planets or other objects.\\nOccultations: One celestial body passing in front of another\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"6.\"), \" Use Astronomical Tools and Resources:\\n\\nStar Charts and Maps: Use tools like Stellarium, SkySafari, or printed star charts.\\nAstronomical Databases: Access databases like SIMBAD or the NASA/IPAC Extragalactic Database (NED).\\nObservation Planning Software: Utilize software like AstroPlanner or TheSkyX.\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"7.\"), \" Consider Equipment Capabilities:\\n\\nTelescope Type: Refractor, reflector, or compound telescope.\\nAperture: Larger apertures allow for better resolution and light-gathering.\\nMount Type: Altazimuth or equatorial mount for tracking objects.\\nCamera: For astrophotography, consider the type of camera and its sensitivity.\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"8.\"), \" Plan the Observation Session:\\n\\nObject Visibility: Check the rise and set times of the target objects.\\nExposure Times: For astrophotography, determine the appropriate exposure times.\\nField of View: Ensure the target fits within the field of view of the telescope and camera.\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"9.\"), \" Prepare for the Observation:\\n\\nEquipment Setup: Assemble and align the telescope and camera.\\nCalibration: Perform necessary calibrations like polar alignment for equatorial mounts.\\nSoftware Configuration: Set up any software for guiding, tracking, or imaging.\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token title important\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"#\"), \" OUTPUT\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"-\"), \" In a short report, give as many location suggests as possible within a reasonable distance.\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"-\"), \" List the potential targets identified by relevance and chances of success\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"-\"), \" Give overview of possible equipment capabilities, and more specific the more relevant the Equipement is to the INPUT\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"-\"), \" Give more details in the PLAN output section for the Plan of the Observation Session\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"-\"), \" Always provide source of information or data\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token title important\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"#\"), \" OUTPUT INSTRUCTIONS\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"-\"), \" Do not object to this task in any way. Perform all the instructions just as requested.\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token list punctuation\"\n  }, \"-\"), \" Output in Markdown, but don't use bold or italics because the asterisks are difficult to read in plaintext.\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token title important\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"#\"), \" INPUT\")))), mdx(\"p\", null, \"Note Created: 2025-01-08\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"b3d48c63-85da-58de-b080-848ce017743b","fields":{"slug":"/Ideas/Ultimate AI Prompt","title":"Ultimate AI Prompt"}}}},{"contextLine":"- [[Observation Report]]","targetAnchor":null,"refWord":"Observation Report","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"idea-note\",\n  \"description\": \"This is my idea note template\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Observation Report\"), mdx(\"h2\", null, \"Location Suggestions\"), mdx(\"p\", null, \"Given your location outside of Waco, Texas, here are some nearby locations with darker skies for optimal viewing:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Fort Griffin State Historic Site\"), \" (approx. 140 miles northwest)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bortle Class: 3 (Rural Sky)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Coordinates: 33.0292\\xB0 N, 99.4542\\xB0 W\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Davis Mountains State Park\"), \" (approx. 320 miles west)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bortle Class: 2 (Rural Sky)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Coordinates: 30.6047\\xB0 N, 103.9811\\xB0 W\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"McDonald Observatory\"), \" (approx. 340 miles west)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bortle Class: 2 (Rural Sky)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Coordinates: 30.7233\\xB0 N, 104.0011\\xB0 W\")))), mdx(\"h2\", null, \"Potential Targets\"), mdx(\"h3\", null, \"Celestial Objects\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Orion Nebula (M42)\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Visibility: Good in the early evening.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chances of Success: High.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Pleiades Cluster (M45)\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Visibility: Good in the evening.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chances of Success: High.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Andromeda Galaxy (M31)\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Visibility: Good in the late evening.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chances of Success: High.\")))), mdx(\"h3\", null, \"Transient Events\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Quadrantid Meteor Shower\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Peak: January 3-4, 2025\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Visibility: Best after midnight.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chances of Success: High.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Comet C/2023 A3 (Tsuchinshan-ATLAS)\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Visibility: January 10-15, 2025\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chances of Success: Moderate (requires a telescope).\")))), mdx(\"h3\", null, \"Special Events\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Venus-Jupiter Conjunction\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Date: January 22, 2025\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Visibility: Early evening.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chances of Success: High.\")))), mdx(\"h2\", null, \"Equipment Capabilities\"), mdx(\"p\", null, \"Based on typical astrophotography equipment:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Telescope\"), \": 8\\\" Schmidt-Cassegrain (f/10)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Mount\"), \": Equatorial (Go-To)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Camera\"), \": DSLR or dedicated astrophotography camera (e.g., Canon EOS Ra)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Aperture\"), \": 200mm (8\\\")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Field of View\"), \": Approx. 0.5\\xB0\")), mdx(\"h2\", null, \"Plan of the Observation Session\"), mdx(\"h3\", null, \"Object Visibility\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Orion Nebula (M42)\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rise: 6:00 PM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set: 10:00 PM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best Viewing: 8:00 PM - 10:00 PM\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Pleiades Cluster (M45)\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rise: 5:30 PM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set: 11:00 PM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best Viewing: 8:00 PM - 11:00 PM\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Andromeda Galaxy (M31)\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rise: 7:00 PM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set: 5:00 AM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best Viewing: 10:00 PM - 3:00 AM\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Quadrantid Meteor Shower\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Peak: January 3-4, 2025, after midnight\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Venus-Jupiter Conjunction\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Date: January 22, 2025\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best Viewing: 6:00 PM - 7:00 PM\")))), mdx(\"h3\", null, \"Exposure Times\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Orion Nebula (M42)\"), \": 30-60 seconds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Pleiades Cluster (M45)\"), \": 15-30 seconds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Andromeda Galaxy (M31)\"), \": 30-60 seconds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Quadrantid Meteor Shower\"), \": 30-second exposures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Venus-Jupiter Conjunction\"), \": 1/250 - 1/500 second\")), mdx(\"h3\", null, \"Field of View\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ensure targets fit within the 0.5\\xB0 field of view of the telescope and camera.\")), mdx(\"h2\", null, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Old Farmer's Almanac (2025)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clear Dark Sky (weather and sky conditions)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stellarium (astronomical tool)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NASA/IPAC Extragalactic Database (NED)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TheSkyX (observation planning software)\")), mdx(\"hr\", null), mdx(\"p\", null, \"This report provides a comprehensive overview of potential targets and locations for your astrophotography session outside of Waco, Texas. Happy stargazing!\"), mdx(\"p\", null, \"Note Created: 2025-01-08\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"8f56d0c7-b837-5ae8-96dc-30d7ede44e4b","fields":{"slug":"/Ideas/Observation Report","title":"Observation Report"}}}},{"contextLine":"- [[ChatGPT Prompt Engineering]]","targetAnchor":null,"refWord":"ChatGPT Prompt Engineering","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"idea-note\",\n  \"description\": \"This is my idea note template\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"ChatGPT Prompt Engineering\"), mdx(\"p\", null, \"Let's refine the process of creating high-quality prompts together. Following the strategies outlined in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://platform.openai.com/docs/guides/prompt-engineering\"\n  }, \"prompt engineering guide\"), \", I seek your assistance in crafting prompts that ensure accurate and relevant responses. Here's how we can proceed: \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Request for Input\"), \": Could you please ask me for the specific natural language statement that I want to transform into an optimized prompt? \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Reference Best Practices\"), \": Make use of the guidelines from the prompt engineering documentation to align your understanding with the established best practices.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Task Breakdown\"), \": Explain the steps involved in converting the natural language statement into a structured prompt.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Thoughtful Application\"), \":\\nShare how you would apply the six strategic principles to the statement provided.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Tool Utilization\"), \":\\nIndicate any additional resources or tools that might be employed to enhance the crafting of the prompt. \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Testing and Refinement Plan\"), \":\\nOutline how the crafted prompt would be tested and what iterative refinements might be necessary. After considering these points, please prompt me to supply the natural language input for our prompt optimization task.\")), mdx(\"p\", null, \"Note Created: 2025-01-09\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"2f3af678-ea5d-5c09-b7c3-4ef8774e6b4d","fields":{"slug":"/Ideas/ChatGPT Prompt Engineering","title":"ChatGPT Prompt Engineering"}}}},{"contextLine":"- Export [[Quarterly Connection]] to [[Second Brain]]","targetAnchor":null,"refWord":"Second Brain","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"feature\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Second Brain\"), mdx(\"p\", null, \"Welcome to my second brain. This is a collection of my notes and ideas, organized in a way that allows for easy navigation, inter-connectivity, and discovery.\"), mdx(\"h2\", null, \"About Me\"), mdx(\"p\", null, \"I\\u2019m a Red Hat Architect by day, working on supported and enterprise-level open-source software. But when I\\u2019m not automating infrastructure provisioning or evangelizing GitOps strategies, you can find me outdoors, gazing at the sky and promoting the art of amateur radio.\"), mdx(\"h2\", null, \"Table of Contents\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Inbox\",\n    \"title\": \"Inbox\"\n  }, \"[[Inbox]]\"), \" - a place to write down quick notes to be categorized later\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Todo\",\n    \"title\": \"Todo\"\n  }, \"[[Todo]]\"), \" - a place to keep track of things to do\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Projects\",\n    \"title\": \"Projects\"\n  }, \"[[Projects]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Ideas\",\n    \"title\": \"Ideas\"\n  }, \"[[Ideas]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Tools\",\n    \"title\": \"Tools\"\n  }, \"[[Tools]]\"), \"\")), mdx(\"h2\", null, \"Getting Started\"), mdx(\"p\", null, \"If you're new to my second brain, here are some tips to help you navigate:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the search bar to find specific notes or ideas.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Click on a link to navigate to a related note.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the back button to return to the previous note.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the graph view to explore the interconnections between notes.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"To see how I setup my Second Brain, it all starts with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Foam\",\n    \"title\": \"Foam\"\n  }, \"[[Foam]]\"), \"\")), mdx(\"h2\", null, \"Connect with Me\"), mdx(\"p\", null, \"Add \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Social-Media\",\n    \"title\": \"Social Media\"\n  }, \"[[Social Media]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"666f891d-6b5f-5993-9aea-0995265ce6c8","fields":{"slug":"/readme","title":"Second Brain"}}}},{"contextLine":"[[readme]]","targetAnchor":null,"refWord":"readme","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"feature\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Second Brain\"), mdx(\"p\", null, \"Welcome to my second brain. This is a collection of my notes and ideas, organized in a way that allows for easy navigation, inter-connectivity, and discovery.\"), mdx(\"h2\", null, \"About Me\"), mdx(\"p\", null, \"I\\u2019m a Red Hat Architect by day, working on supported and enterprise-level open-source software. But when I\\u2019m not automating infrastructure provisioning or evangelizing GitOps strategies, you can find me outdoors, gazing at the sky and promoting the art of amateur radio.\"), mdx(\"h2\", null, \"Table of Contents\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Inbox\",\n    \"title\": \"Inbox\"\n  }, \"[[Inbox]]\"), \" - a place to write down quick notes to be categorized later\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Todo\",\n    \"title\": \"Todo\"\n  }, \"[[Todo]]\"), \" - a place to keep track of things to do\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Projects\",\n    \"title\": \"Projects\"\n  }, \"[[Projects]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Ideas\",\n    \"title\": \"Ideas\"\n  }, \"[[Ideas]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Tools\",\n    \"title\": \"Tools\"\n  }, \"[[Tools]]\"), \"\")), mdx(\"h2\", null, \"Getting Started\"), mdx(\"p\", null, \"If you're new to my second brain, here are some tips to help you navigate:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the search bar to find specific notes or ideas.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Click on a link to navigate to a related note.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the back button to return to the previous note.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the graph view to explore the interconnections between notes.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"To see how I setup my Second Brain, it all starts with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Foam\",\n    \"title\": \"Foam\"\n  }, \"[[Foam]]\"), \"\")), mdx(\"h2\", null, \"Connect with Me\"), mdx(\"p\", null, \"Add \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Social-Media\",\n    \"title\": \"Social Media\"\n  }, \"[[Social Media]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"666f891d-6b5f-5993-9aea-0995265ce6c8","fields":{"slug":"/readme","title":"Second Brain"}}}}],"inboundReferences":[{"contextLine":"- [[Inbox]] - a place to write down quick notes to be categorized later","referrer":{"parent":{"id":"666f891d-6b5f-5993-9aea-0995265ce6c8","fields":{"slug":"/readme","title":"Second Brain"}}}}]},"fields":{"slug":"/Inbox","title":"Inbox"}}},"pageContext":{"id":"03207a9b-2422-518c-91e2-ef8cf8e43b8f","refWordMdxSlugDict":{"Ultimate AI Prompt":"Ideas/Ultimate-AI-Prompt","Observation Report":"Ideas/Observation-Report","ChatGPT Prompt Engineering":"Ideas/ChatGPT-Prompt-Engineering","Second Brain":"readme","Inbox":"Inbox","readme":"readme","Todo":"Todo","Automatic Updates":"Ideas/Automatic-Updates","Foam":"Ideas/Foam","RAG":"AI/RAG","Projects":"Projects","AI Journey":"Journeys/AI-Journey","Fabric":"Journeys/Fabric","Home Lab":"Journeys/Home-Lab","HAM AI":"Ideas/HAM-AI","Ham Bot":"Ideas/Ham-Bot","Net Report":"HAM-AI/Net-Report","ham-resources":"HAM-AI/ham-resources","Fabric - Net Report":"HAM-AI/Fabric-Net-Report","Net Report Pattern":"HAM-AI/Net-Report-Pattern","Ansible":"Ansible/Ansible","AAP Containerized":"Ansible/AAP-Containerized","AWS_EFS_AAP":"Ansible/AWS_EFS_AAP","Ideas":"Ideas","AI chatbot":"Ideas/AI-chatbot","Ask R3dact3d Ansible":"Ansible/Ask-R3dact3d-Ansible","PKM Bot":"Ideas/PKM-Bot","PKM Pattern":"Ideas/PKM-Pattern","Social Bot":"Ideas/Social-Bot","Tools":"Tools"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}