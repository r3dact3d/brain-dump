{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/readme",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"feature\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Second Brain\"), mdx(\"p\", null, \"Welcome to my second brain. This is a collection of my notes and ideas, organized in a way that allows for easy navigation, inter-connectivity, and discovery.\"), mdx(\"h2\", null, \"About Me\"), mdx(\"p\", null, \"I\\u2019m a Red Hat Architect by day, working on supported and enterprise-level open-source software. But when I\\u2019m not automating infrastructure provisioning or evangelizing GitOps strategies, you can find me outdoors, gazing at the sky and promoting the art of amateur radio.\"), mdx(\"h2\", null, \"Table of Contents\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Inbox\",\n    \"title\": \"Inbox\"\n  }, \"[[Inbox]]\"), \" - a place to write down quick notes to be categorized later\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Todo\",\n    \"title\": \"Todo\"\n  }, \"[[Todo]]\"), \" - a place to keep track of things to do\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Projects\",\n    \"title\": \"Projects\"\n  }, \"[[Projects]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Ideas\",\n    \"title\": \"Ideas\"\n  }, \"[[Ideas]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Tools\",\n    \"title\": \"Tools\"\n  }, \"[[Tools]]\"), \"\")), mdx(\"h2\", null, \"Getting Started\"), mdx(\"p\", null, \"If you're new to my second brain, here are some tips to help you navigate:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the search bar to find specific notes or ideas.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Click on a link to navigate to a related note.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the back button to return to the previous note.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the graph view to explore the interconnections between notes.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"To see how I setup my Second Brain, it all starts with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Foam\",\n    \"title\": \"Foam\"\n  }, \"[[Foam]]\"), \"\")), mdx(\"h2\", null, \"Connect with Me\"), mdx(\"p\", null, \"Add \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Social-Media\",\n    \"title\": \"Social Media\"\n  }, \"[[Social Media]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#second-brain","title":"Second Brain","items":[{"url":"#about-me","title":"About Me"},{"url":"#table-of-contents","title":"Table of Contents"},{"url":"#getting-started","title":"Getting Started"},{"url":"#connect-with-me","title":"Connect with Me"}]}]},"outboundReferences":[{"contextLine":"- [[Inbox]] - a place to write down quick notes to be categorized later","targetAnchor":null,"refWord":"Inbox","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"feature\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Inbox\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Process to onboard using CaC\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ensure new org is created\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"template dir structure for org group_var\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"project - \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"template - get_stats\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Write a system prompt for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"private/myBot\",\n    \"title\": \"myBot\"\n  }, \"[[myBot]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"uhm \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/quantization\",\n    \"title\": \"quantization\"\n  }, \"[[quantization]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"how to get calendar info into Foam\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"how to get email info into Foam\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"process to attach docs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/3930-North-Texas-Emergency\",\n    \"title\": \"3930 North Texas Emergency\"\n  }, \"[[3930 North Texas Emergency]]\"), \" Sunday morning checkin reminder\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"automate \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Check-in-Report\",\n    \"title\": \"Check-in Report\"\n  }, \"[[Check-in Report]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Prayer-List\",\n    \"title\": \"Prayer List\"\n  }, \"[[Prayer List]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://foambubble.github.io/foam/user/recipes/diagrams-in-markdown\"\n  }, \"Diagrams\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Ideas/Ultimate%20AI%20Prompt\",\n    \"title\": \"Ultimate AI Prompt\"\n  }, \"[[Ultimate AI Prompt]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Ideas/Observation%20Report\",\n    \"title\": \"Observation Report\"\n  }, \"[[Observation Report]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/context\",\n    \"title\": \"context\"\n  }, \"[[context]]\"), \" file\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/RSS-Feeds\",\n    \"title\": \"RSS Feeds\"\n  }, \"[[RSS Feeds]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Hugging-Face\",\n    \"title\": \"Hugging Face\"\n  }, \"[[Hugging Face]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Ideas/ChatGPT%20Prompt%20Engineering\",\n    \"title\": \"ChatGPT Prompt Engineering\"\n  }, \"[[ChatGPT Prompt Engineering]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Export \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"private/Quarterly%20Connection\",\n    \"title\": \"Quarterly Connection\"\n  }, \"[[Quarterly Connection]]\"), \" to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Second-Brain\",\n    \"title\": \"Second Brain\"\n  }, \"[[Second Brain]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upload personality traits and compare annually \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/casi\",\n    \"title\": \"casi\"\n  }, \"[[casi]]\"), \"\"))), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"readme\",\n    \"title\": \"readme\"\n  }, \"[[readme]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"03207a9b-2422-518c-91e2-ef8cf8e43b8f","fields":{"slug":"/Inbox","title":"Inbox"}}}},{"contextLine":"- [[Todo]] - a place to keep track of things to do","targetAnchor":null,"refWord":"Todo","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"feature\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Todo\"), mdx(\"p\", null, \"The short story with Foam is I can use \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Markdown\"), \" with \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"VS Code\"), \" and leverage \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"GitHub\"), \" to manage my personal knowledge.\"), mdx(\"h2\", null, \"What I've done\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Got it setup in Code with a couple extensions\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Wrapped my head around the layout and structure and backlinks \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Established templates for daily, meetings, ideas, journeys, and default notes\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Configured \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Ideas/Automatic%20Updates\",\n    \"title\": \"Automatic Updates\"\n  }, \"[[Automatic Updates]]\"), \" \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Configured a private repo to sync to public repo for collab and transparency \")), mdx(\"h2\", null, \"\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/Recipes\",\n    \"title\": \"Recipes\"\n  }, \"[[Recipes]]\"), \"\"), mdx(\"p\", null, \"Extensions used in VS Code\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web Clipper\")), mdx(\"h2\", null, \"Ideas\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Import more notes and historical data\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Integrations\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Calendar\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Chatbot\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Email\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Iterate\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Foam\",\n    \"title\": \"Foam\"\n  }, \"[[Foam]]\"), \" document\")), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"This is an example of a todo list item that's complete\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"This one is not completed yet\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"You can mark it completed by pressing \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Option\"), \"+\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C\"), \" (or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Alt\"), \"+\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"C\"), \") when your cursor is on this line\", mdx(\"ul\", {\n    parentName: \"li\",\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"You can also select multiple lines and mark them all at once!\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"0a56c4d4-e7bc-51f8-b2c2-17cf0f1a3a54","fields":{"slug":"/Todo","title":"Todo"}}}},{"contextLine":"- [[Projects]]","targetAnchor":null,"refWord":"Projects","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"feature\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Projects\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Journeys/AI%20Journey\",\n    \"title\": \"AI Journey\"\n  }, \"[[AI Journey]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Ideas/HAM%20AI\",\n    \"title\": \"HAM AI\"\n  }, \"[[HAM AI]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Ansible/Ansible\",\n    \"title\": \"Ansible\"\n  }, \"[[Ansible]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  })), mdx(\"h2\", null, \"Todo List\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"This is an example of a todo list item that's complete\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"This one is not completed yet\")), mdx(\"p\", null, \"Note Created: 2025-01-04\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fd572650-a24e-5371-ac1d-43049523b96e","fields":{"slug":"/Projects","title":"Projects"}}}},{"contextLine":"- [[Ideas]]","targetAnchor":null,"refWord":"Ideas","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"feature\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Ideas\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Ideas/AI%20chatbot\",\n    \"title\": \"AI chatbot\"\n  }, \"[[AI chatbot]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Ideas/PKM%20Bot\",\n    \"title\": \"PKM Bot\"\n  }, \"[[PKM Bot]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Ideas/Social%20Bot\",\n    \"title\": \"Social Bot\"\n  }, \"[[Social Bot]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Ansible/Ask%20R3dact3d%20Ansible\",\n    \"title\": \"Ask R3dact3d Ansible\"\n  }, \"[[Ask R3dact3d Ansible]]\"), \"\")), mdx(\"p\", null, \"Note Created: 2025-01-04\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"a9083762-8d0f-5129-9a32-8dbc9e13b0b2","fields":{"slug":"/Ideas","title":"Ideas"}}}},{"contextLine":"- [[Tools]]","targetAnchor":null,"refWord":"Tools","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"basic-note\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Tools\"), mdx(\"h2\", null, \"List\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/GitHub\",\n    \"title\": \"GitHub\"\n  }, \"[[GitHub]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/QRZ\",\n    \"title\": \"QRZ\"\n  }, \"[[QRZ]]\"), \"\")), mdx(\"h2\", null, \"AI Vendors\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Claude\",\n    \"title\": \"Claude\"\n  }, \"[[Claude]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Mistral\",\n    \"title\": \"Mistral\"\n  }, \"[[Mistral]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/OpenAI\",\n    \"title\": \"OpenAI\"\n  }, \"[[OpenAI]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  })), mdx(\"p\", null, \"Note Created: 2025-01-04\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"561ba7f2-dc95-55d5-865f-d6a4b0914ea1","fields":{"slug":"/Tools","title":"Tools"}}}},{"contextLine":"> To see how I setup my Second Brain, it all starts with [[Foam]]","targetAnchor":null,"refWord":"Foam","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"idea-note\",\n  \"description\": \"This is my idea note template\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Foam\"), mdx(\"p\", null, \"As part of my work and due partly to my personality, I do a lot of discovery and research through out the day.  I was looking for a way to take better notes to reflect on and eventually integrate into my AI \", \"[RAG]\", \" pipeline so that I can have generative conversations with my notes.  \"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I won't go into detail about all the options I considered, but I decided to use Foam for my new \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../readme.md\"\n  }, \"Second Brain\"), \" for the following reasons.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It uses the markdown format, so easy to use and readme.md\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Opensource and east to start using \", \"[Foam]\", \" in vs code with just a few extensions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I can keep my files complete private and local if I want\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I can sync with GitHub between devices.\")), mdx(\"h2\", null, \"Templates\"), mdx(\"h2\", null, \"Syncing\"), mdx(\"p\", null, \"In my notes I have notes that I want to share with the public for collaboration, however there are also some notes that are private or confidential that I don't want to expose to the public.\"), mdx(\"h2\", null, \"Backup\"), mdx(\"p\", null, \"Created a process to sync my \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Private\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Public\"), \" notes called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Automatic%20Updates\",\n    \"title\": \"Automatic Updates\"\n  }, \"[[Automatic Updates]]\"), \"\"), mdx(\"p\", null, \"Note Created: 2025-01-11\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"c003ada4-8ef1-5bb0-847c-382d0e71f925","fields":{"slug":"/Ideas/Foam","title":"Foam"}}}}],"inboundReferences":[{"contextLine":"- Export [[Quarterly Connection]] to [[Second Brain]]","referrer":{"parent":{"id":"03207a9b-2422-518c-91e2-ef8cf8e43b8f","fields":{"slug":"/Inbox","title":"Inbox"}}}},{"contextLine":"[[readme]]","referrer":{"parent":{"id":"03207a9b-2422-518c-91e2-ef8cf8e43b8f","fields":{"slug":"/Inbox","title":"Inbox"}}}},{"contextLine":"> Here is my pipeline to share the **public** facing part of my [[Second Brain]] and keep the **private** or **internal ruminations** to myself.","referrer":{"parent":{"id":"e1b9b198-768e-5f9a-a543-3107c3e9fcbe","fields":{"slug":"/Ideas/Automatic Updates","title":"Automatic Updates"}}}}]},"fields":{"slug":"/readme","title":"Second Brain"}}},"pageContext":{"id":"666f891d-6b5f-5993-9aea-0995265ce6c8","refWordMdxSlugDict":{"Inbox":"Inbox","quantization":"AI/quantization","Ultimate AI Prompt":"Ideas/Ultimate-AI-Prompt","Observation Report":"Ideas/Observation-Report","ChatGPT Prompt Engineering":"Ideas/ChatGPT-Prompt-Engineering","Second Brain":"readme","Todo":"Todo","Automatic Updates":"Ideas/Automatic-Updates","Foam":"Ideas/Foam","Projects":"Projects","AI Journey":"Journeys/AI-Journey","Open WebUI":"AI/Open-WebUI","Fabric":"Journeys/Fabric","fabric-origin":"Fabric/fabric-origin","Home Lab":"Journeys/Home-Lab","RAG":"AI/RAG","HAM AI":"Ideas/HAM-AI","Ham Bot":"Ideas/Ham-Bot","Net Report":"HAM-AI/Net-Report","ham-resources":"HAM-AI/ham-resources","Fabric - Net Report":"HAM-AI/Fabric-Net-Report","Net Report Pattern":"HAM-AI/Net-Report-Pattern","Ansible":"Ansible/Ansible","AAP Containerized":"Ansible/AAP-Containerized","AWS_EFS_AAP":"Ansible/AWS_EFS_AAP","Ideas":"Ideas","AI chatbot":"Ideas/AI-chatbot","STT-TTS Walkthrough":"AI/STT-TTS-Walkthrough","Voice Inference":"AI/Voice-Inference","Ask R3dact3d Ansible":"Ansible/Ask-R3dact3d-Ansible","PKM Bot":"Ideas/PKM-Bot","PKM Pattern":"Ideas/PKM-Pattern","Social Bot":"Ideas/Social-Bot","Tools":"Tools","readme":"readme"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}