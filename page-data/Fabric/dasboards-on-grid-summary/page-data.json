{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/Fabric/dasboards-on-grid-summary",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Summary Dasboards on Grid\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"fabric -y https://www.youtube.com/watch?v\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \"5gPSsZ9MXkE -o \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"..\"), \"/\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"..\"), \"/\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"..\"), \"/working/foamy-stuff/Fabric/dasboards-on-grid-summary.md -p summarize\"))), mdx(\"h1\", null, \"ONE SENTENCE SUMMARY:\"), mdx(\"p\", null, \"Home Assistant's Lovelace dashboards offer adaptive and customizable controls for smart home devices, with recent updates and community add-ons making it easier to create fixed, responsive layouts.\"), mdx(\"h1\", null, \"MAIN POINTS:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Home Assistant's Lovelace dashboards adapt to screen size.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Dedicated devices can use fixed, non-adaptive dashboards.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Home Assistant announced upcoming dashboard improvements.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The presenter uses repurposed devices for dedicated dashboards.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Microsoft Surface Studios and resale markets are sources for devices.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Raspberry Pi or Intel Nook paired with touchscreens are preferred.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Browser Mod and Layout Card add-ons enhance dashboard functionality.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Custom Layout Card allows precise grid placement of cards.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The presenter demonstrates creating a custom dashboard.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Future updates may include drag-and-drop and easier editing.\")), mdx(\"h1\", null, \"TAKEAWAYS:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Lovelace dashboards provide adaptive and customizable smart home control.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Repurposed devices and touchscreens can create dedicated dashboards.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Community add-ons like Browser Mod and Layout Card enhance functionality.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Custom Layout Card allows precise, fixed grid layouts for cards.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Future updates promise easier dashboard editing and management.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#summary-dasboards-on-grid","title":"Summary Dasboards on Grid"},{"url":"#one-sentence-summary","title":"ONE SENTENCE SUMMARY:"},{"url":"#main-points","title":"MAIN POINTS:"},{"url":"#takeaways","title":"TAKEAWAYS:"}]},"outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/Fabric/dasboards-on-grid-summary","title":"Summary Dasboards on Grid"}}},"pageContext":{"id":"9b359b93-cee0-5534-b533-5fad84c5d4fe","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}