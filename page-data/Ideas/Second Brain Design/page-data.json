{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/Ideas/Second Brain Design",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"idea-note\",\n  \"description\": \"This is my idea note template\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Second Brain Design\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"User creates notes in VS Code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Local private repository synced to local GitHub repository\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Exclude private/confidential notes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Notes pushed to remote public GitHub.\")), mdx(\"p\", null, \"Note Created: 2025-01-11\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#second-brain-design","title":"Second Brain Design"}]},"outboundReferences":[],"inboundReferences":[{"contextLine":"4. Create [[Second Brain Design]] document","referrer":{"parent":{"id":"0a56c4d4-e7bc-51f8-b2c2-17cf0f1a3a54","fields":{"slug":"/Todo","title":"Todo"}}}}]},"fields":{"slug":"/Ideas/Second Brain Design","title":"Second Brain Design"}}},"pageContext":{"id":"d4d22285-2f36-5796-82d8-cdc94f8b40cc","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}