{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/AI/Voice Inference",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"ai-note\",\n  \"description\": \"This is my ai template\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Voice Inference\"), mdx(\"h3\", null, \"Objectives\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Learn to set up a local text-to-speech inference server.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Understand how to clone and configure a GitHub repository for the server.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Test and change voices using the local server.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add custom voices to the server using Piper.\")), mdx(\"h3\", null, \"Instructions\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Clone the GitHub Repository\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to the open AI repository on GitHub.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Copy the repository link.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open a terminal in an empty directory on your computer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git clone\"), \" and paste the repository link to clone it locally.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Rename the Configuration File\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Navigate to the cloned repository.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Find the file named \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sample.env\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rename \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sample.env\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"speech.env\"), \".\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Run Docker Compose\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open a terminal in the repository directory.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run the command \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker compose up\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wait for the container to download and set up.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Test the Server\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open a browser and go to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"localhost:8000\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Navigate to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"health\"), \" section and execute to check the status.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"models\"), \" section and execute to see available models.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Configure Admin Settings\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to the admin panel under settings and click on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"audio\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set the API URL to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"localhost:8000\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set the text-to-speech voice to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Nova\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set the text-to-speech model to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tts1 HD\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Save the settings.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Change Voices\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go back to the GitHub repository.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Select a different voice from the available options.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Save the new voice settings and test it out.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Add Custom Voices\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to the Piper section in the GitHub repository.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Select a Piper voice and model from Piper samples.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Download the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".onnx\"), \" model file and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".onnx.json\"), \" config file for the selected voice.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add the downloaded files to the repository.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Test Custom Voices\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go back to the admin panel and select the newly added custom voice.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Save the settings and test the new voice.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#voice-inference","title":"Voice Inference","items":[{"items":[{"url":"#objectives","title":"Objectives"},{"url":"#instructions","title":"Instructions"}]}]}]},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[Voice Inference]]","referrer":{"parent":{"id":"d10775fb-f3b3-535b-a099-335dcaa6c5f3","fields":{"slug":"/Ideas/AI chatbot","title":"AI chatbot"}}}}]},"fields":{"slug":"/AI/Voice Inference","title":"Voice Inference"}}},"pageContext":{"id":"6f10afea-27aa-56b6-a840-cbadefb97880","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}