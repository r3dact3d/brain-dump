{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/AI/STT-TTS Walkthrough",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"ai-note\",\n  \"description\": \"This is my ai template\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"STT-TTS Walkthrough\"), mdx(\"h2\", null, \"Instructions\"), mdx(\"h3\", null, \"Objectives\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Learn how to configure speech-to-text (STT) and text-to-speech (TTS) settings in an admin panel.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Understand the different models available for STT and TTS.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Configure and test the STT and TTS models for effective use.\")), mdx(\"h3\", null, \"Instructions\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Access the Admin Panel\"), \":\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to the admin panel and navigate to the settings.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Locate the audio tab.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Configure Speech-to-Text (STT) Settings\"), \":\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Choose between Whisper local, OpenAI API call, and Web API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For Whisper local, select from available models: tiny, base, small, medium, large, and turbo.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: Type \\\"tiny English only\\\" to download and use the tiny English model.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For OpenAI API call, configure to use the Whisper one model.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Configure Text-to-Speech (TTS) Settings\"), \":\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For Web API, select any available option (note: quality may be poor).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For OpenAI, choose between two TTS models (recommended: TTS one).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Select a voice option from the available choices (e.g., Alloy, Nova).\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: Choose \\\"Nova\\\" and save the settings.\"))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Test the STT and TTS Configurations\"), \":\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Speak into the microphone to test the STT configuration.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: Say \\\"Hello, how are you?\\\" and check the transcription.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the speaker button to test the TTS configuration.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: Listen to the AI's response to ensure the selected voice is working correctly.\"))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Engage in a Verbal Conversation\"), \":\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the configured STT and TTS settings to have a verbal conversation with the AI.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Interrupt and ask questions as needed.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: Ask about the need for a nuclear power plant for AI computation and listen to the AI's response.\"))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Review and Adjust Settings\"), \":\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ensure that both STT and TTS models are configured appropriately.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make any necessary adjustments based on the testing results.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#stt-tts-walkthrough","title":"STT-TTS Walkthrough","items":[{"url":"#instructions","title":"Instructions","items":[{"url":"#objectives","title":"Objectives"},{"url":"#instructions-1","title":"Instructions"}]}]}]},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[STT-TTS Walkthrough]]","referrer":{"parent":{"id":"d10775fb-f3b3-535b-a099-335dcaa6c5f3","fields":{"slug":"/Ideas/AI chatbot","title":"AI chatbot"}}}}]},"fields":{"slug":"/AI/STT-TTS Walkthrough","title":"STT-TTS Walkthrough"}}},"pageContext":{"id":"045a0f06-f913-5d02-a6ce-59c541089603","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}